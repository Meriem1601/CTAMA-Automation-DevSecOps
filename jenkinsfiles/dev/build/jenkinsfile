pipeline {
    agent { label "EC2-Agent" }

    environment {
        AWS_REGION = 'eu-north-1' // Your AWS region
        ECR_REPOSITORY_URI = '211125488393.dkr.ecr.eu-north-1.amazonaws.com/ctama-devsecops-images' // Full URI of your ECR repository
        IMAGE_TAG = 'test' // The tag for your Docker image
        CREDENTIALS_FILE = '/tmp/docker_ecr_credentials.txt' // Path to the file where credentials will be stored (optional)
    }

    stages {
        stage('Hello Git') {
            steps {
                sh 'git version'
            }
        }
        
        stage('Hello Docker Build') {
            steps {
                sh 'docker version'
                sh 'docker build -t my-node-app:${IMAGE_TAG} .'
            }
        }
        
        stage('Authenticate Docker to ECR') {
            steps {
                withCredentials([aws(credentialsId: 'aws-credentials', region: "${AWS_REGION}")]) {
                    script {
                        // Get the login password for ECR and log in
                        def dockerPassword = sh(
                            script: "aws ecr get-login-password --region ${AWS_REGION}",
                            returnStdout: true
                        ).trim()

                        // Authenticate Docker to ECR
                        sh "echo ${dockerPassword} | docker login --username AWS --password-stdin ${ECR_REPOSITORY_URI}"
                    }
                }
            }
        }

        stage('Tag and Push Image to ECR') {
            steps {
                withCredentials([aws(credentialsId: 'aws-credentials', region: "${AWS_REGION}")]) {
                    script {
                        // Tag the Docker image with the full ECR repository URI
                        sh "docker tag my-node-app:${IMAGE_TAG} ${ECR_REPOSITORY_URI}:${IMAGE_TAG}"
                        
                        // Push the Docker image to ECR
                        sh "docker push ${ECR_REPOSITORY_URI}:${IMAGE_TAG}"
                    }
                }
            }
        }
    }

    post {
        cleanup {
            // Clean up the credentials file if it was used
            sh "rm -f ${CREDENTIALS_FILE}"
        }
    }
}
