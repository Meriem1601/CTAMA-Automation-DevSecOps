pipeline {
    agent { label "EC2-Agent" }

    environment {
        AWS_REGION = 'eu-north-1'
        ECR_REPOSITORY_URI = '211125488393.dkr.ecr.eu-north-1.amazonaws.com/ctama-devsecops-images'
        IMAGE_TAG = 'v1.0.0-build' // Updated tag for build stage
    }

    stages {
        stage('Hello Git') {
            steps {
                sh 'git version'
            }
        }

        stage('Hello Docker Build') {
            steps {
                sh 'docker version'
                sh 'docker build -t my-node-app:${IMAGE_TAG} .'
            }
        }

        stage('Authenticate Docker to ECR') {
            steps {
                withCredentials([aws(credentialsId: 'aws-credentials', region: "${AWS_REGION}")]) {
                    script {
                        def dockerPassword = sh(
                            script: "aws ecr get-login-password --region ${AWS_REGION}",
                            returnStdout: true
                        ).trim()
                        sh "echo ${dockerPassword} | docker login --username AWS --password-stdin ${ECR_REPOSITORY_URI}"
                    }
                }
            }
        }

        stage('Tag and Push Image to ECR') {
            steps {
                withCredentials([aws(credentialsId: 'aws-credentials', region: "${AWS_REGION}")]) {
                    script {
                        sh "docker tag my-node-app:${IMAGE_TAG} ${ECR_REPOSITORY_URI}:${IMAGE_TAG}"
                        def imageExists = sh(
                            script: """
                                aws ecr describe-images \
                                    --repository-name ${ECR_REPOSITORY_URI.split('/')[1]} \
                                    --image-ids imageTag=${IMAGE_TAG} \
                                    --region ${AWS_REGION} > /dev/null 2>&1; \
                                echo \$?
                            """,
                            returnStdout: true
                        ).trim()
                        if (imageExists == '0') {
                            echo "Image ${ECR_REPOSITORY_URI}:${IMAGE_TAG} already exists. Skipping push."
                        } else {
                            sh "docker push ${ECR_REPOSITORY_URI}:${IMAGE_TAG}"
                        }
                    }
                }
            }
        }
    }

    post {
        success {
            echo "CI Pipeline completed successfully. Docker image has been built and pushed."
        }

        failure {
            echo "CI Pipeline failed. Please check the logs for details."
        }
    }
}
