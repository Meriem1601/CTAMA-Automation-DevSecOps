pipeline {
    agent {
        label 'EC2-Agent'
    }
    environment {
        KUBECONFIG = '/root/.kube/config'
        MYSQL_DEPLOYMENT_DIR = 'mysql-deployment'
        BACKEND_DEPLOYMENT_DIR = 'backend-deployment'
        SLACK_WEBHOOK = 'https://hooks.slack.com/services/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'
    }
    
    stages {
        stage('Check Kyverno') {
            steps {
                script {
                    sh '''
                        echo "Checking Kyverno namespace and pods..."
                        kubectl get ns kyverno
                        kubectl get pods -n kyverno | grep "Running"
                    '''
                }
            }
        }
        stage('Verify Policies') {
            steps {
                script {
                    sh '''
                        echo "Verifying Kyverno policies:"
                        kubectl get clusterpolicies
                        kubectl get policies --all-namespaces
                    '''
                }
            }
        }
        stage('Deploy MySQL') {
            steps {
                script {
                    sh '''
                        echo "Deploying MySQL components..."
                        for resource in ${MYSQL_DEPLOYMENT_DIR}/*.yaml; do
                            echo "Applying $resource to devsecops-prod namespace"
                            kubectl apply -f "$resource" -n devsecops-prod
                        done
                    '''
                }
            }
        }
        stage('Verify MySQL Deployment') {
            steps {
                script {
                    sh '''
                        echo "Verifying MySQL deployment in devsecops-prod namespace..."
                        kubectl get statefulsets -n devsecops-prod
                        kubectl get services -n devsecops-prod
                    '''
                }
            }
        }
        stage('Deploy Backend') {
            steps {
                script {
                    sh '''
                        echo "Deploying Backend components..."
                        for resource in ${BACKEND_DEPLOYMENT_DIR}/*.yaml; do
                            if [[ "$resource" == *"deployment.yaml" ]]; then
                                echo "Skipping $resource"
                                continue
                            fi
                            echo "Applying $resource to devsecops-prod namespace"
                            kubectl apply -f "$resource" -n devsecops-prod
                        done
                    '''
                }
            }
        }
        stage('Verify Backend App') {
            steps {
                script {
                    sh '''
                        echo "Verifying backend app deployment in devsecops-prod namespace..."
                        kubectl get pods -n devsecops-prod | grep backend-app
                    '''
                }
            }
        }
    }
    
    post {
        success {
            script {
                sh """
                curl -X POST -H 'Content-type: application/json' \
                --data '{
                    "blocks": [
                        {
                            "type": "header",
                            "text": {
                                "type": "plain_text",
                                "text": "üöÄ Deployment Successful!",
                                "emoji": true
                            }
                        },
                        {
                            "type": "section",
                            "text": {
                                "type": "mrkdwn",
                                "text": "*Deployment Overview:*\n‚Ä¢ üõ°Ô∏è Kyverno Policies Verified\n‚Ä¢ üíæ MySQL Components Deployed\n‚Ä¢ üñ•Ô∏è Backend Components Rolled Out"
                            }
                        },
                        {
                            "type": "section",
                            "fields": [
                                {
                                    "type": "mrkdwn",
                                    "text": "*Namespace:*\n`devsecops-prod`"
                                },
                                {
                                    "type": "mrkdwn",
                                    "text": "*Status:*\nüíö All Systems Operational"
                                }
                            ]
                        },
                        {
                            "type": "divider"
                        },
                        {
                            "type": "context",
                            "elements": [
                                {
                                    "type": "mrkdwn",
                                    "text": "üïí Deployment completed successfully | Jenkins Build #${BUILD_NUMBER}"
                                }
                            ]
                        }
                    ]
                }' \
                ${SLACK_WEBHOOK}
                """
            }
        }
        
        failure {
            script {
                sh """
                curl -X POST -H 'Content-type: application/json' \
                --data '{
                    "blocks": [
                        {
                            "type": "header",
                            "text": {
                                "type": "plain_text",
                                "text": "‚ùå Deployment Failed!",
                                "emoji": true
                            }
                        },
                        {
                            "type": "section",
                            "text": {
                                "type": "mrkdwn",
                                "text": "*Urgent Attention Required:*\n‚Ä¢ üö® Deployment Process Encountered Critical Issues\n‚Ä¢ üîç Immediate Investigation Needed"
                            }
                        },
                        {
                            "type": "section",
                            "fields": [
                                {
                                    "type": "mrkdwn",
                                    "text": "*Potential Failure Points:*\n‚Ä¢ Kyverno Validation\n‚Ä¢ Policy Verification\n‚Ä¢ MySQL Deployment\n‚Ä¢ Backend Deployment"
                                }
                            ]
                        },
                        {
                            "type": "section",
                            "text": {
                                "type": "mrkdwn",
                                "text": "*Recommended Actions:*\n1. üïµÔ∏è Review Jenkins Console Output\n2. üîß Check Kubernetes Configurations\n3. ÔøΩlogs Inspect Detailed Error Logs"
                            }
                        },
                        {
                            "type": "divider"
                        },
                        {
                            "type": "context",
                            "elements": [
                                {
                                    "type": "mrkdwn",
                                    "text": "üö® Deployment Failed | Jenkins Build #${BUILD_NUMBER}"
                                }
                            ]
                        }
                    ]
                }' \
                ${SLACK_WEBHOOK}
                """
            }
        }
        
        unstable {
            script {
                sh """
                curl -X POST -H 'Content-type: application/json' \
                --data '{
                    "blocks": [
                        {
                            "type": "header",
                            "text": {
                                "type": "plain_text",
                                "text": "‚ö†Ô∏è Deployment Unstable",
                                "emoji": true
                            }
                        },
                        {
                            "type": "section",
                            "text": {
                                "type": "mrkdwn",
                                "text": "*Deployment Status:*\n‚Ä¢ üü® Partial Deployment Success\n‚Ä¢ üß© Some Components May Not Be Fully Initialized"
                            }
                        },
                        {
                            "type": "section",
                            "fields": [
                                {
                                    "type": "mrkdwn",
                                    "text": "*Namespace:*\n`devsecops-prod`"
                                },
                                {
                                    "type": "mrkdwn",
                                    "text": "*Status:*\nüî∂ Requires Verification"
                                }
                            ]
                        },
                        {
                            "type": "section",
                            "text": {
                                "type": "mrkdwn",
                                "text": "*Recommended Next Steps:*\n1. üîç Conduct Manual Verification\n2. üßê Review Component Statuses\n3. üîÑ Consider Re-running Deployment"
                            }
                        },
                        {
                            "type": "divider"
                        },
                        {
                            "type": "context",
                            "elements": [
                                {
                                    "type": "mrkdwn",
                                    "text": "‚ö†Ô∏è Unstable Deployment | Jenkins Build #${BUILD_NUMBER}"
                                }
                            ]
                        }
                    ]
                }' \
                ${SLACK_WEBHOOK}
                """
            }
        }
        
        always {
            cleanWs()
        }
    }
}
